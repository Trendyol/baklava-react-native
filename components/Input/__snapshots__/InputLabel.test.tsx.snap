// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Input Label should render fixed label correctly 1`] = `
<View
  flexDirection="row"
  mb={2}
  style={
    Array [
      Object {
        "flexDirection": "row",
        "marginBottom": 4,
      },
    ]
  }
  testID="box"
>
  <Text
    color="contentSecondary"
    style={
      Array [
        Object {
          "color": "#6E7787",
          "fontFamily": "System",
          "fontSize": 12,
          "fontWeight": "500",
        },
      ]
    }
    variant="subtitle04Medium"
  >
    Label
  </Text>
</View>
`;

exports[`Input Label should render fixed label with optional correctly 1`] = `
<View
  flexDirection="row"
  mb={2}
  style={
    Array [
      Object {
        "flexDirection": "row",
        "marginBottom": 4,
      },
    ]
  }
  testID="box"
>
  <Text
    color="contentSecondary"
    style={
      Array [
        Object {
          "color": "#6E7787",
          "fontFamily": "System",
          "fontSize": 12,
          "fontWeight": "500",
        },
      ]
    }
    variant="subtitle04Medium"
  >
    Label
  </Text>
  <Text
    color="contentTertiary"
    ml={1}
    style={
      Array [
        Object {
          "color": "#95A1B5",
          "fontFamily": "System",
          "fontSize": 12,
          "fontWeight": "400",
          "marginLeft": 2,
        },
      ]
    }
    variant="subtitle04Regular"
  >
    (Optional)
  </Text>
</View>
`;

exports[`Input Label should render null when not has a label 1`] = `null`;

exports[`Input Label should render outlined label correctly 1`] = `
<View
  collapsable={false}
  pointerEvents="none"
  style={Object {}}
>
  <View
    flexDirection="row"
    height={54}
    style={
      Array [
        Object {
          "flexDirection": "row",
        },
      ]
    }
    testID="box"
  >
    <Text
      collapsable={false}
      style={Object {}}
    >
      Label
      
    </Text>
  </View>
</View>
`;

exports[`Input Label should render outlined label with optional correctly 1`] = `
<View
  collapsable={false}
  pointerEvents="none"
  style={Object {}}
>
  <View
    flexDirection="row"
    height={54}
    style={
      Array [
        Object {
          "flexDirection": "row",
        },
      ]
    }
    testID="box"
  >
    <Text
      collapsable={false}
      style={Object {}}
    >
      Label
       (Optional)
    </Text>
  </View>
</View>
`;

exports[`Input Label should render outlined label with placeholder when focused is true 1`] = `
<View
  collapsable={false}
  pointerEvents="none"
  style={Object {}}
>
  <View
    flexDirection="row"
    height={54}
    style={
      Array [
        Object {
          "flexDirection": "row",
        },
      ]
    }
    testID="box"
  >
    <Text
      collapsable={false}
      style={Object {}}
    >
      Label
       (Optional)
    </Text>
  </View>
</View>
`;
