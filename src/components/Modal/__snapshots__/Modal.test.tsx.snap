// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Modal should not render Modal when visible false 1`] = `null`;

exports[`Modal should not render Modal when visible true without children 1`] = `null`;

exports[`Modal should render Modal when visible true with children 1`] = `
<View
  accessibilityLabel="modal-wrapper"
  style={
    Array [
      Object {
        "bottom": 0,
        "justifyContent": "center",
        "left": 0,
        "padding": 20,
        "position": "absolute",
        "right": 0,
        "top": 0,
      },
    ]
  }
  testID="modal-wrapper"
>
  <View
    accessibilityLabel="modal-overlay"
    collapsable={false}
    onResponderRelease={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "#273142",
        "bottom": 0,
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
    testID="modal-overlay"
  />
  <View
    accessibilityLabel="modal"
    accessible={true}
    style={
      Array [
        Object {
          "backgroundColor": "#FFFFFF",
          "borderRadius": 8,
          "padding": 16,
        },
        Object {
          "maxHeight": "90%",
        },
      ]
    }
    testID="modal"
  >
    <View
      accessibilityLabel="modal-header"
      style={
        Array [
          Object {
            "alignItems": "flex-start",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "marginBottom": 16,
          },
        ]
      }
      testID="modal-header"
    >
      <View
        style={
          Array [
            Object {
              "flex": 1,
            },
          ]
        }
      >
        <Text
          accessibilityLabel="modal-title"
          accessible={true}
          numberOfLines={2}
          style={
            Array [
              Object {
                "color": "#273142",
                "fontFamily": "Rubik-Medium",
                "fontSize": 16,
                "fontWeight": "500",
                "lineHeight": 20,
              },
            ]
          }
          testID="modal-title"
        >
          test title
        </Text>
      </View>
      <View
        accessibilityLabel="modal-close"
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 0,
            "left": 0,
            "right": 12,
            "top": 12,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="modal-close"
      >
        <View
          style={
            Array [
              Object {
                "padding": 2,
                "paddingBottom": 8,
                "paddingLeft": 8,
              },
            ]
          }
        >
          <RNSVGSvgView
            align="xMidYMid"
            bbHeight="14"
            bbWidth="14"
            fill="#273142"
            focusable={false}
            height={14}
            meetOrSlice={0}
            minX={0}
            minY={0}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Object {
                  "flex": 0,
                  "height": 14,
                  "width": 14,
                },
              ]
            }
            testID="icon"
            title="close"
            vbHeight={24}
            vbWidth={24}
            width={14}
            xmlns="http://www.w3.org/2000/svg"
          >
            <RNSVGGroup
              fill={
                Object {
                  "type": 0,
                  "value": 4280758594,
                }
              }
              propList={
                Array [
                  "fill",
                ]
              }
            >
              <RNSVGPath
                clipRule={0}
                d="M.54.54a1.846 1.846 0 0 1 2.612 0L12 9.39 20.848.54a1.846 1.846 0 0 1 2.611 2.612L14.611 12l8.848 8.848a1.846 1.846 0 0 1-2.61 2.611L12 14.611l-8.848 8.848A1.846 1.846 0 0 1 .54 20.85L9.389 12 .541 3.152A1.846 1.846 0 0 1 .54.54Z"
                fill={
                  Object {
                    "type": 0,
                    "value": 4280758594,
                  }
                }
                fillRule={0}
                propList={
                  Array [
                    "fill",
                    "fillRule",
                  ]
                }
              />
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
      </View>
    </View>
    <RCTScrollView
      accessibilityLabel="modal-body"
      bounces={false}
      showsVerticalScrollIndicator={true}
      testID="modal-body"
    >
      <View>
        <Text
          accessibilityLabel="lorem-text"
          accessible={true}
          style={
            Array [
              Object {
                "color": "#273142",
                "fontFamily": "Rubik-Regular",
                "fontSize": 14,
              },
            ]
          }
          testID="lorem-text"
        >
          Lorem ipsum dolor
        </Text>
      </View>
    </RCTScrollView>
  </View>
</View>
`;

exports[`Modal should render Modal without header 1`] = `
<View
  accessibilityLabel="modal-wrapper"
  style={
    Array [
      Object {
        "bottom": 0,
        "justifyContent": "center",
        "left": 0,
        "padding": 20,
        "position": "absolute",
        "right": 0,
        "top": 0,
      },
    ]
  }
  testID="modal-wrapper"
>
  <View
    accessibilityLabel="modal-overlay"
    collapsable={false}
    onResponderRelease={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "#273142",
        "bottom": 0,
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
    testID="modal-overlay"
  />
  <View
    accessibilityLabel="modal"
    accessible={true}
    style={
      Array [
        Object {
          "backgroundColor": "#FFFFFF",
          "borderRadius": 8,
          "padding": 16,
        },
        Object {
          "maxHeight": "90%",
        },
      ]
    }
    testID="modal"
  >
    <RCTScrollView
      accessibilityLabel="modal-body"
      bounces={false}
      showsVerticalScrollIndicator={true}
      testID="modal-body"
    >
      <View>
        <Text
          accessibilityLabel="lorem-text"
          accessible={true}
          style={
            Array [
              Object {
                "color": "#273142",
                "fontFamily": "Rubik-Regular",
                "fontSize": 14,
              },
            ]
          }
          testID="lorem-text"
        >
          Lorem ipsum dolor
        </Text>
      </View>
    </RCTScrollView>
  </View>
</View>
`;
